{
  "Action": {
    "ReturnValue": null,
    "Warning": null,
    "FunctionName": "Update",
    "Parameters": [
      {
        "Type": "System.String",
        "Name": "sql",
        "Value": "UPDATE answers SET is_finished = @is_finished WHERE id = @answer_id"
      },
      {
        "Type": "System.Collections.Generic.List<object>",
        "Name": "SqlParameters",
        "Value": [
          {
            "ParameterName": "is_finished",
            "VariableNameOrValue": "1",
            "TypeFullName": "System.Int64"
          },
          {
            "ParameterName": "answer_id",
            "VariableNameOrValue": "%answer_id%",
            "TypeFullName": "System.Int64"
          }
        ]
      }
    ],
    "ReturnValues": null
  },
  "Text": "update answers set is_finished=1 where %answer_id%",
  "Reload": false,
  "LlmRequest": {
    "temperature": 0.0,
    "top_p": 0.0,
    "frequencyPenalty": 0.0,
    "presencePenalty": 0.0,
    "maxLength": 4000,
    "llmResponseType": "json",
    "scheme": "{\n\t\"ReturnValue\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null,\n\t\"Warning\": string = null,\n\t\"FunctionName\": string,\n\t\"Parameters\": [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}],\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}]\n}",
    "model": "gpt-4o",
    "promptMessage": [
      {
        "role": "system",
        "content": [
          {
            "type": "text",
            "text": "Your job is: \r\n1. Parse user intent\r\n2. Map the intent to one of C# function provided to you\r\n3. Return a valid JSON: \r\n\r\n## csharp function ##\r\nInt32 Update(String sql, List<object>()? SqlParameters = null)\r\n## csharp function ##\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%. Do not remove %\r\nString sql is the SQL statement that should be executed. \r\nString sql can be defined as variable, e.g. %sql%\r\nSql MAY NOT contain a variable(except table name), it MUST be injected using SqlParameters to prevent SQL injection\r\nSqlParameters is List of ParameterInfo(string ParameterName, string VariableNameOrValue, string TypeFullName)\r\nTypeFullName is Full name of the type in c#, System.String, System.Double, System.DateTime, System.Int64, etc.\r\nAll integers are type of System.Int64.\r\n%Now% variable is type of DateTime. %Now% variable should be injected as SqlParameter \r\n\r\nParameter @id MUST be type System.Int64\r\nIf table name is a variable, keep the variable in the sql statement\r\nYou MUST generate a valid sql statement for SQLite.\r\nYou MUST provide SqlParameters if SQL has @parameter.\r\n"
          },
          {
            "type": "text",
            "text": "Table name is: answers. Fix sql if it includes type."
          },
          {
            "type": "text",
            "text": "You MUST respond in JSON, scheme:\r\n {\n\t\"ReturnValue\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null,\n\t\"Warning\": string = null,\n\t\"FunctionName\": string,\n\t\"Parameters\": [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}],\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}]\n}"
          }
        ]
      },
      {
        "role": "assistant",
        "content": [
          {
            "type": "text",
            "text": "# examples #\r\n\"update table myTable, street=%full_street%, %zip%\" => sql: \"UPDATE myTable SET street = @full_street, zip = @zip\", SqlParameters:[{ParameterName:full_street, VariableNameOrValue:%full_street%, TypeFullName:string}, {ParameterName:zip, VariableNameOrValue:%zip%, TypeFullName:int}], Warning: Missing WHERE statement can affect rows that should not\r\n\"update tableB, %name%, %phone% where id=%id%\" => sql: \"UPDATE tableB SET name=@name, phone=@phone WHERE id=@id\", SqlParameters:[{ParameterName:name, VariableNameOrValue:%name%, TypeFullName:string}, {ParameterName:phone, VariableNameOrValue:%phone%, TypeFullName:string}, {ParameterName:id, VariableNameOrValue:%id%, TypeFullName:int}] \r\n\"update %table% WHERE %name%, set zip=@zip => sql: \"UPDATE %table% SET zip=@zip WHERE name=@name\", SqlParameters:[{ParameterName:name, VariableNameOrValue:%name%, TypeFullName:string}, {ParameterName:zip, VariableNameOrValue%zip%, TypeFullName:int}, {VariableNameOrValue:id, VariableNameOrValue%id%, TypeFullName:int}] \r\n# examples #"
          },
          {
            "type": "text",
            "text": "### answers columns ###\n[{\"name\":\"id\",\"type\":\"BIGINT\",\"isnotnull\":0,\"isprimarykey\":1},{\"name\":\"answers\",\"type\":\"TEXT\",\"isnotnull\":1,\"isprimarykey\":0},{\"name\":\"is_finished\",\"type\":\"BOOLEAN\",\"isnotnull\":0,\"isprimarykey\":0},{\"name\":\"created\",\"type\":\"DATETIME\",\"isnotnull\":0,\"isprimarykey\":0}]\n### answers columns ###"
          }
        ]
      },
      {
        "role": "user",
        "content": [
          {
            "type": "text",
            "text": "update answers set is_finished=1 where %answer_id%"
          }
        ]
      }
    ],
    "type": "PLang.Modules.DbModule.Builder",
    "caching": true,
    "RawResponse": "```json\n{\n\t\"FunctionName\": \"Update\",\n\t\"Parameters\": [{\n\t\t\"Type\": \"System.String\",\n\t\t\"Name\": \"sql\",\n\t\t\"Value\": \"UPDATE answers SET is_finished = @is_finished WHERE id = @answer_id\"\n\t}, {\n\t\t\"Type\": \"System.Collections.Generic.List<object>\",\n\t\t\"Name\": \"SqlParameters\",\n\t\t\"Value\": [{\n\t\t\t\"ParameterName\": \"is_finished\",\n\t\t\t\"VariableNameOrValue\": \"1\",\n\t\t\t\"TypeFullName\": \"System.Int64\"\n\t\t}, {\n\t\t\t\"ParameterName\": \"answer_id\",\n\t\t\t\"VariableNameOrValue\": \"%answer_id%\",\n\t\t\t\"TypeFullName\": \"System.Int64\"\n\t\t}]\n\t}],\n\t\"Warning\": null\n}\n```"
  },
  "RunOnBuild": false
}